plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.10.0'
    id "io.freefair.lombok" version "6.0.0-m2"

}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "io.rest-assured:rest-assured:5.3.0",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.14.2",
            "org.assertj:assertj-core:3.24.2",
            "org.junit.jupiter:junit-jupiter:5.9.2",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.codeborne:selenide:6.12.2",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "io.qameta.allure:allure-java-commons:2.19.0",
            "org.aeonbits.owner:owner:1.0.4",
            'org.junit.jupiter:junit-jupiter-api:5.9.2',
            'org.junit.jupiter:junit-jupiter-params:5.9.2',
            'io.github.bonigarcia:webdrivermanager:5.2.1'
    )
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task android(type: Test) {
    useJUnitPlatform {
        includeTags 'android'
    }
}

task ios(type: Test) {
    useJUnitPlatform {
        includeTags 'ios'
    }
}